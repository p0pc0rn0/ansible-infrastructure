---
- name: Fail if unsupported distribution
  fail:
    msg: "Currently only Debian/Ubuntu family is implemented in this role"
  when: ansible_os_family not in ['Debian']

- name: Install Zabbix server packages (Debian/Ubuntu)
  apt:
    name:
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - zabbix-sql-scripts
      - postgresql
      - python3-psycopg2
      - nginx
      - php-fpm
      - php-pgsql
      - php-cli
    state: present
    update_cache: yes

- name: Ensure Zabbix data directory exists
  file:
    path: /var/lib/zabbix
    state: directory
    owner: zabbix
    group: zabbix
    mode: "0750"

- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: true

- name: Create Zabbix database user
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ zabbix_server_db_user }}"
    password: "{{ zabbix_server_db_password }}"
    priv: "ALL"
    state: present

- name: Create Zabbix database
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ zabbix_server_db_name }}"
    owner: "{{ zabbix_server_db_user }}"
    encoding: UTF8
    state: present

- name: Check if Zabbix schema already imported
  stat:
    path: /var/lib/zabbix/.schema_imported
  register: zabbix_schema_flag

- name: Import initial schema
  command: >-
    bash -lc "zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u postgres psql {{ zabbix_server_db_name }}"
  args:
    creates: /var/lib/zabbix/.schema_imported
  when: not zabbix_schema_flag.stat.exists

- name: Touch schema imported flag
  file:
    path: /var/lib/zabbix/.schema_imported
    state: touch
  when: not zabbix_schema_flag.stat.exists

- name: Determine PHP version
  command: php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;'
  register: php_version
  changed_when: false

- name: Set PHP-FPM facts
  set_fact:
    zabbix_php_version: "{{ php_version.stdout }}"
    zabbix_php_fpm_service: "php{{ php_version.stdout }}-fpm"
    zabbix_php_fpm_socket: "/run/php/php{{ php_version.stdout }}-fpm.sock"

- name: Configure PHP timezone
  lineinfile:
    path: "/etc/php/{{ zabbix_php_version }}/fpm/php.ini"
    regexp: '^date\.timezone'
    line: "date.timezone = {{ zabbix_php_timezone }}"
  notify: Reload php-fpm

- name: Configure PHP post_max_size
  lineinfile:
    path: "/etc/php/{{ zabbix_php_version }}/fpm/php.ini"
    regexp: '^post_max_size'
    line: "post_max_size = {{ zabbix_php_post_max_size }}"
  notify: Reload php-fpm

- name: Configure PHP upload_max_filesize
  lineinfile:
    path: "/etc/php/{{ zabbix_php_version }}/fpm/php.ini"
    regexp: '^upload_max_filesize'
    line: "upload_max_filesize = {{ zabbix_php_upload_max_filesize }}"
  notify: Reload php-fpm

- name: Deploy zabbix_server.conf
  template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
    owner: root
    group: root
    mode: "0640"
  notify: Restart zabbix server

- name: Deploy Nginx site configuration
  template:
    src: zabbix_nginx.conf.j2
    dest: /etc/nginx/sites-available/zabbix.conf
    owner: root
    group: root
    mode: "0644"
  notify: Reload nginx

- name: Enable Zabbix Nginx site
  file:
    src: /etc/nginx/sites-available/zabbix.conf
    dest: /etc/nginx/sites-enabled/zabbix.conf
    state: link
  notify: Reload nginx

- name: Disable default Nginx site if present
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Reload nginx

- name: Ensure Nginx service is enabled
  service:
    name: nginx
    state: started
    enabled: true

- name: Ensure PHP-FPM service is enabled
  service:
    name: "{{ zabbix_php_fpm_service }}"
    state: started
    enabled: true

- name: Ensure Zabbix server service is enabled
  service:
    name: zabbix-server
    state: started
    enabled: true
