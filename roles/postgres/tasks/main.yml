---
# Installing PostgreSQL
- name: Install PostgreSQL on Debian/Ubuntu
  apt:
    name: "postgresql-{{ postgres_version }}"
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Install PostgreSQL on RHEL/CentOS
  yum:
    name: "postgresql{{ postgres_version }}-server"
    state: present
  when: ansible_os_family == "RedHat"

# Initializing the database on RHEL/CentOS
- name: Initialize PostgreSQL database (RHEL/CentOS)
  command: "/usr/pgsql-{{ postgres_version }}/bin/postgresql-{{ postgres_version }}-setup initdb"
  args:
    creates: "/var/lib/pgsql/{{ postgres_version }}/data/postgresql.conf"
  when: ansible_os_family == "RedHat"

# Configuration
- name: Deploy PostgreSQL config
  template:
    src: postgresql.conf.j2
    dest: >-
      {{ '/etc/postgresql/' + postgres_version|string + '/main/postgresql.conf'
         if ansible_os_family == 'Debian'
         else '/var/lib/pgsql/' + postgres_version|string + '/data/postgresql.conf' }}
    mode: "0644"
  notify: Restart PostgreSQL

# Launch and autorun
- name: Ensure PostgreSQL service is started and enabled
  service:
    name: "{{ 'postgresql' if ansible_os_family == 'Debian' else 'postgresql-' + postgres_version|string }}"
    state: started
    enabled: true

# Creating a user
- name: Ensure PostgreSQL user exists
  become_user: postgres
  postgresql_user:
    name: "{{ postgres_user }}"
    password: "{{ postgres_password }}"
    state: present

# Creating a database
- name: Ensure PostgreSQL database exists
  become_user: postgres
  postgresql_db:
    name: "{{ postgres_db }}"
    owner: "{{ postgres_user }}"
    encoding: "UTF8"
    state: present